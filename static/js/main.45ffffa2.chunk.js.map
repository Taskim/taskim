{"version":3,"sources":["images/crop-1.jpg","data.js","postprocessing/Pass.js","postprocessing/MaskPass.js","postprocessing/ShaderPass.js","shaders/CopyShader.js","postprocessing/EffectComposer.js","postprocessing/RenderPass.js","shaders/DigitalGlitch.js","postprocessing/GlitchPass.js","index.js"],"names":["module","exports","__webpack_require__","p","data","img1","Pass","this","enabled","needsSwap","clear","renderToScreen","Object","assign","prototype","setSize","width","height","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","console","error","MaskPass","scene","camera","call","inverse","create","constructor","writeValue","clearValue","context","state","buffers","color","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP","ClearMaskPass","ShaderPass","shader","textureID","undefined","ShaderMaterial","uniforms","material","UniformsUtils","clone","defines","vertexShader","fragmentShader","OrthographicCamera","Scene","quad","Mesh","PlaneBufferGeometry","frustumCulled","add","value","texture","CopyShader","tDiffuse","opacity","join","EffectComposer","renderTarget","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","stencilBuffer","size","getDrawingBufferSize","Vector2","WebGLRenderTarget","name","renderTarget1","renderTarget2","passes","copyPass","_previousFrameTime","Date","now","swapBuffers","tmp","addPass","pass","push","insertPass","index","splice","i","currentRenderTarget","getRenderTarget","il","length","stencilFunc","NOTEQUAL","reset","dispose","RenderPass","overrideMaterial","clearColor","clearAlpha","clearDepth","oldClearColor","oldClearAlpha","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","autoClearColor","autoClearDepth","autoClearStencil","DigitalGlitch","tDisp","byp","amount","angle","seed","seed_x","seed_y","distortion_x","distortion_y","col_s","GlitchPass","dt_size","generateHeightmap","factor","Image","_ref","url","scale","props","objectWithoutProperties","useMemo","THREE","load","_useState","useState","_useState2","slicedToArray","hovered","setHover","hover","useCallback","unhover","useSpring","react_default","a","createElement","three","mesh","onHover","onUnhover","interpolate","f","args","meshLambertMaterial","transparent","object","Text","_ref2","children","position","_ref2$color","_ref2$fontSize","fontSize","_viewport","viewport","useThree","viewportWidth","viewportHeight","canvas","document","getContext","font","concat","textAlign","textBaseline","fillStyle","fillText","sprite","spriteMaterial","image","premultiplyAlpha","onUpdate","s","needsUpdate","Background","_ref3","_viewport2","meshBasicMaterial","depthTest","Stars","_ref4","group","useRef","theta","useRender","r","Math","sin","degToRad","cos","current","rotation","set","_useMemo","geo","mat","coords","Array","fill","map","random","vertices","_useMemo2","ref","_ref5","_ref6","p1","p2","p3","key","geometry","Effects","_ref7","_useThree3","gl","composer","useEffect","obj","glitchPass","Images","_ref8","top","mouse","scrollMax","_ref9","_ref10","x","y","z","_ref11","Fragment","spotLight","intensity","Main","_useSpring2","_useSpring3","_useSpring3$","onMouseMove","_ref12","clientX","clientY","window","innerWidth","innerHeight","onScroll","e","target","scrollTop","dist","className","style","max","_Math","randFloat","PI","data_arr","Float32Array","val","DataTexture","RGBFormat","FloatType","applySpring","applyThree","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.45ffffa2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crop-1.eff8d384.jpg\";","import img1 from './images/crop-1.jpg'\n// import img2 from './images/crop-2.jpg'\n// import img3 from './images/crop-3.jpg'\n// import img4 from './images/crop-4.jpg'\n// import img5 from './images/crop-5.jpg'\n// import img6 from './images/crop-6.jpg'\n// import img7 from './images/crop-7.jpg'\n// import img8 from './images/crop-8.jpg'\n// import img9 from './images/crop-9.jpg'\n// import img10 from './images/crop-10.jpg'\n// import img11 from './images/crop-11.jpg'\n// import img12 from './images/crop-12.jpg'\n// import img13 from './images/crop-13.jpg'\n// import img14 from './images/crop-14.jpg'\n\nexport default [\n  [img1, -0.5585486420134362, -3.9373147490685803, 5, 0, 0.75],\n//   [img2, 1.2658082998471168, -11.546249109522778, 10, 0.25, 0.725],\n//   [img3, -1.9467783978748945, -14.812371431221711, 15, 0.25, 0.7],\n//   [img4, 2.99601069694845874, -4.10862465704651, 20, 0.75, 0.675],\n//   [img5, -1.8993567183341669, -14.813132752114951, 25, 1, 0.65],\n//   [img6, 1.8375452075389486, -12.13103791856008, 30, 1, 0.625],\n//   [img7, -1.8776788044001291, -12.032336156141714, 35, 1.5, 0.6],\n//   [img8, 1.0749348594509635, -11.031316605440301, 40, 1.75, 0.575],\n//   [img9, -2.4000439407834233, -13.164578222990698, 45, 2, 0.55],\n//   [img10, -2.7065939344543151, -8.871286874370471, 40, 1.25, 0.525],\n//   [img11, 0.3849091162266927, -20.0874592327078005, 30, 1.25, 0.5],\n//   [img12, -2.566920223782157, -7.577466274058035, 16, 1.75, 0.475],\n//   [img13, 1.472727466653086, -16.016837845215539, 20, 1.5, 0.45],\n//   [img14, 1.5343322678763767, -16.235258169213427, 30, 2, 0.425]\n]\n","var Pass = function() {\n  // if set to true, the pass is processed by the composer\n  this.enabled = true\n\n  // if set to true, the pass indicates to swap read and write buffer after rendering\n  this.needsSwap = true\n\n  // if set to true, the pass clears its buffer before rendering\n  this.clear = false\n\n  // if set to true, the result of the pass is rendered to screen\n  this.renderToScreen = false\n}\n\nObject.assign(Pass.prototype, {\n  setSize: function(width, height) {},\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    console.error('THREE.Pass: .render() must be implemented in derived pass.')\n  },\n})\n\nexport { Pass }","import { Pass } from './Pass.js'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar MaskPass = function(scene, camera) {\n  Pass.call(this)\n\n  this.scene = scene\n  this.camera = camera\n\n  this.clear = true\n  this.needsSwap = false\n\n  this.inverse = false\n}\n\nMaskPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: MaskPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    var context = renderer.context\n    var state = renderer.state\n\n    // don't update color or depth\n\n    state.buffers.color.setMask(false)\n    state.buffers.depth.setMask(false)\n\n    // lock buffers\n\n    state.buffers.color.setLocked(true)\n    state.buffers.depth.setLocked(true)\n\n    // set up stencil\n\n    var writeValue, clearValue\n\n    if (this.inverse) {\n      writeValue = 0\n      clearValue = 1\n    } else {\n      writeValue = 1\n      clearValue = 0\n    }\n\n    state.buffers.stencil.setTest(true)\n    state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE)\n    state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff)\n    state.buffers.stencil.setClear(clearValue)\n\n    // draw into the stencil buffer\n\n    renderer.setRenderTarget(readBuffer)\n    if (this.clear) renderer.clear()\n    renderer.render(this.scene, this.camera)\n\n    renderer.setRenderTarget(writeBuffer)\n    if (this.clear) renderer.clear()\n    renderer.render(this.scene, this.camera)\n\n    // unlock color and depth buffer for subsequent rendering\n\n    state.buffers.color.setLocked(false)\n    state.buffers.depth.setLocked(false)\n\n    // only render where stencil is set to 1\n\n    state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff) // draw if == 1\n    state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP)\n  },\n})\n\nvar ClearMaskPass = function() {\n  Pass.call(this)\n\n  this.needsSwap = false\n}\n\nClearMaskPass.prototype = Object.create(Pass.prototype)\n\nObject.assign(ClearMaskPass.prototype, {\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    renderer.state.buffers.stencil.setTest(false)\n  },\n})\n\nexport { ClearMaskPass, MaskPass }\n","import { Mesh, OrthographicCamera, PlaneBufferGeometry, Scene, ShaderMaterial, UniformsUtils } from 'three/src/Three'\nimport { Pass } from './Pass.js'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar ShaderPass = function(shader, textureID) {\n  Pass.call(this)\n\n  this.textureID = textureID !== undefined ? textureID : 'tDiffuse'\n\n  if (shader instanceof ShaderMaterial) {\n    this.uniforms = shader.uniforms\n\n    this.material = shader\n  } else if (shader) {\n    this.uniforms = UniformsUtils.clone(shader.uniforms)\n\n    this.material = new ShaderMaterial({\n      defines: Object.assign({}, shader.defines),\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n    })\n  }\n\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\n  this.scene = new Scene()\n\n  this.quad = new Mesh(new PlaneBufferGeometry(2, 2), null)\n  this.quad.frustumCulled = false // Avoid getting clipped\n  this.scene.add(this.quad)\n}\n\nShaderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: ShaderPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture\n    }\n\n    this.quad.material = this.material\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      renderer.render(this.scene, this.camera)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      if (this.clear) renderer.clear()\n      renderer.render(this.scene, this.camera)\n    }\n  },\n})\n\nexport { ShaderPass }\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nvar CopyShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    opacity: { value: 1.0 },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n    'void main() {',\n    'vUv = uv;',\n    'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform float opacity;',\n    'uniform sampler2D tDiffuse;',\n    'varying vec2 vUv;',\n    'void main() {',\n    'vec4 texel = texture2D( tDiffuse, vUv );',\n    'gl_FragColor = opacity * texel;',\n    '}',\n  ].join('\\n'),\n}\n\nexport { CopyShader }\n","import { ClearMaskPass, MaskPass } from './MaskPass.js'\nimport { ShaderPass } from './ShaderPass.js'\nimport { CopyShader } from '../shaders/CopyShader.js'\nimport { LinearFilter, RGBAFormat, Vector2, WebGLRenderTarget } from 'three/src/Three'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar EffectComposer = function(renderer, renderTarget) {\n  this.renderer = renderer\n\n  if (renderTarget === undefined) {\n    var parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBAFormat,\n      stencilBuffer: false,\n    }\n\n    var size = renderer.getDrawingBufferSize(new Vector2())\n    renderTarget = new WebGLRenderTarget(size.width, size.height, parameters)\n    renderTarget.texture.name = 'EffectComposer.rt1'\n  }\n\n  this.renderTarget1 = renderTarget\n  this.renderTarget2 = renderTarget.clone()\n  this.renderTarget2.texture.name = 'EffectComposer.rt2'\n  this.writeBuffer = this.renderTarget1\n  this.readBuffer = this.renderTarget2\n  this.passes = []\n\n  // dependencies\n  if (CopyShader === undefined) {\n    console.error('THREE.EffectComposer relies on THREE.CopyShader')\n  }\n  if (ShaderPass === undefined) {\n    console.error('THREE.EffectComposer relies on THREE.ShaderPass')\n  }\n  this.copyPass = new ShaderPass(CopyShader)\n  this._previousFrameTime = Date.now()\n}\n\nObject.assign(EffectComposer.prototype, {\n  swapBuffers: function() {\n    var tmp = this.readBuffer\n    this.readBuffer = this.writeBuffer\n    this.writeBuffer = tmp\n  },\n\n  addPass: function(pass) {\n    this.passes.push(pass)\n    var size = this.renderer.getDrawingBufferSize(new Vector2())\n    pass.setSize(size.width, size.height)\n  },\n\n  insertPass: function(pass, index) {\n    this.passes.splice(index, 0, pass)\n  },\n\n  render: function(deltaTime) {\n    // deltaTime value is in seconds\n    if (deltaTime === undefined) {\n      deltaTime = (Date.now() - this._previousFrameTime) * 0.001\n    }\n    this._previousFrameTime = Date.now()\n    var currentRenderTarget = this.renderer.getRenderTarget()\n    var maskActive = false\n    var pass,\n      i,\n      il = this.passes.length\n\n    for (i = 0; i < il; i++) {\n      pass = this.passes[i]\n      if (pass.enabled === false) continue\n\n      pass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive)\n      if (pass.needsSwap) {\n        if (maskActive) {\n          var context = this.renderer.context\n          context.stencilFunc(context.NOTEQUAL, 1, 0xffffffff)\n          this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime)\n          context.stencilFunc(context.EQUAL, 1, 0xffffffff)\n        }\n        this.swapBuffers()\n      }\n      if (MaskPass !== undefined) {\n        if (pass instanceof MaskPass) {\n          maskActive = true\n        } else if (pass instanceof ClearMaskPass) {\n          maskActive = false\n        }\n      }\n    }\n    this.renderer.setRenderTarget(currentRenderTarget)\n  },\n\n  reset: function(renderTarget) {\n    if (renderTarget === undefined) {\n      var size = this.renderer.getDrawingBufferSize(new Vector2())\n      renderTarget = this.renderTarget1.clone()\n      renderTarget.setSize(size.width, size.height)\n    }\n    this.renderTarget1.dispose()\n    this.renderTarget2.dispose()\n    this.renderTarget1 = renderTarget\n    this.renderTarget2 = renderTarget.clone()\n    this.writeBuffer = this.renderTarget1\n    this.readBuffer = this.renderTarget2\n  },\n  setSize: function(width, height) {\n    this.renderTarget1.setSize(width, height)\n    this.renderTarget2.setSize(width, height)\n    for (var i = 0; i < this.passes.length; i++) {\n      this.passes[i].setSize(width, height)\n    }\n  },\n})\n\nexport { EffectComposer }\n","import { Pass } from './Pass.js'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar RenderPass = function(scene, camera, overrideMaterial, clearColor, clearAlpha) {\n  Pass.call(this)\n\n  this.scene = scene\n  this.camera = camera\n\n  this.overrideMaterial = overrideMaterial\n\n  this.clearColor = clearColor\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0\n\n  this.clear = true\n  this.clearDepth = false\n  this.needsSwap = false\n}\n\nRenderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: RenderPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    var oldAutoClear = renderer.autoClear\n    renderer.autoClear = false\n\n    this.scene.overrideMaterial = this.overrideMaterial\n\n    var oldClearColor, oldClearAlpha\n\n    if (this.clearColor) {\n      oldClearColor = renderer.getClearColor().getHex()\n      oldClearAlpha = renderer.getClearAlpha()\n\n      renderer.setClearColor(this.clearColor, this.clearAlpha)\n    }\n\n    if (this.clearDepth) {\n      renderer.clearDepth()\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer)\n\n    // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil)\n    renderer.render(this.scene, this.camera)\n\n    if (this.clearColor) {\n      renderer.setClearColor(oldClearColor, oldClearAlpha)\n    }\n\n    this.scene.overrideMaterial = null\n    renderer.autoClear = oldAutoClear\n  },\n})\n\nexport { RenderPass }\n","/**\n * @author felixturner / http://airtight.cc/\n *\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nvar DigitalGlitch = {\n  uniforms: {\n    tDiffuse: { value: null }, //diffuse texture\n    tDisp: { value: null }, //displacement texture for digital glitch squares\n    byp: { value: 0 }, //apply the glitch ?\n    amount: { value: 0.08 },\n    angle: { value: 0.02 },\n    seed: { value: 0.02 },\n    seed_x: { value: 0.02 }, //-1,1\n    seed_y: { value: 0.02 }, //-1,1\n    distortion_x: { value: 0.5 },\n    distortion_y: { value: 0.6 },\n    col_s: { value: 0.05 },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n    'void main() {',\n    'vUv = uv;',\n    'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform int byp;', //should we apply the glitch ?\n    'uniform sampler2D tDiffuse;',\n    'uniform sampler2D tDisp;',\n    'uniform float amount;',\n    'uniform float angle;',\n    'uniform float seed;',\n    'uniform float seed_x;',\n    'uniform float seed_y;',\n    'uniform float distortion_x;',\n    'uniform float distortion_y;',\n    'uniform float col_s;',\n    'varying vec2 vUv;',\n    'float rand(vec2 co){',\n    'return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);',\n    '}',\n    'void main() {',\n    'if(byp<1) {',\n    'vec2 p = vUv;',\n    'float xs = floor(gl_FragCoord.x / 0.5);',\n    'float ys = floor(gl_FragCoord.y / 0.5);',\n    //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n    'vec4 normal = texture2D (tDisp, p*seed*seed);',\n    'if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {',\n    'if(seed_x>0.){',\n    'p.y = 1. - (p.y + distortion_y);',\n    '}',\n    'else {',\n    'p.y = distortion_y;',\n    '}',\n    '}',\n    'if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {',\n    'if(seed_y>0.){',\n    'p.x=distortion_x;',\n    '}',\n    'else {',\n    'p.x = 1. - (p.x + distortion_x);',\n    '}',\n    '}',\n    'p.x+=normal.x*seed_x*(seed/5.);',\n    'p.y+=normal.y*seed_y*(seed/5.);',\n    //base from RGB shift shader\n    'vec2 offset = amount * vec2( cos(angle), sin(angle));',\n    'vec4 cr = texture2D(tDiffuse, p + offset);',\n    'vec4 cga = texture2D(tDiffuse, p);',\n    'vec4 cb = texture2D(tDiffuse, p - offset);',\n    'gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);',\n    //add noise\n    'vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.05);',\n    'gl_FragColor = gl_FragColor+ snow;',\n    '}',\n    'else {',\n    'gl_FragColor=texture2D (tDiffuse, vUv);',\n    '}',\n    '}',\n  ].join('\\n'),\n}\n\nexport { DigitalGlitch }\n","import {\n  DataTexture,\n  FloatType,\n  Math as _Math,\n  Mesh,\n  OrthographicCamera,\n  PlaneBufferGeometry,\n  RGBFormat,\n  Scene,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three/src/Three'\nimport { DigitalGlitch } from '../shaders/DigitalGlitch.js'\nimport { Pass } from './Pass.js'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar GlitchPass = function(dt_size) {\n  Pass.call(this)\n  if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on THREE.DigitalGlitch')\n  var shader = DigitalGlitch\n  this.uniforms = UniformsUtils.clone(shader.uniforms)\n  if (dt_size === undefined) dt_size = 64\n  this.uniforms['tDisp'].value = this.generateHeightmap(dt_size)\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader,\n  })\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\n  this.scene = new Scene()\n  this.quad = new Mesh(new PlaneBufferGeometry(2, 2), null)\n  this.quad.frustumCulled = false // Avoid getting clipped\n  this.scene.add(this.quad)\n  this.factor = 0\n}\n\nGlitchPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: GlitchPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    const factor = Math.max(0, this.factor)\n    this.uniforms['tDiffuse'].value = readBuffer.texture\n    this.uniforms['seed'].value = Math.random() * factor //default seeding\n    this.uniforms['byp'].value = 0\n    if (factor) {\n      this.uniforms['amount'].value = (Math.random() / 90) * factor\n      this.uniforms['angle'].value = _Math.randFloat(-Math.PI, Math.PI) * factor\n      this.uniforms['distortion_x'].value = _Math.randFloat(0, 1) * factor\n      this.uniforms['distortion_y'].value = _Math.randFloat(0, 1) * factor\n      this.uniforms['seed_x'].value = _Math.randFloat(-0.3, 0.3) * factor\n      this.uniforms['seed_y'].value = _Math.randFloat(-0.3, 0.3) * factor\n    } else this.uniforms['byp'].value = 1\n    this.quad.material = this.material\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      renderer.render(this.scene, this.camera)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      if (this.clear) renderer.clear()\n      renderer.render(this.scene, this.camera)\n    }\n  },\n\n  generateHeightmap: function(dt_size) {\n    var data_arr = new Float32Array(dt_size * dt_size * 3)\n    var length = dt_size * dt_size\n\n    for (var i = 0; i < length; i++) {\n      var val = _Math.randFloat(0, 1)\n      data_arr[i * 3 + 0] = val\n      data_arr[i * 3 + 1] = val\n      data_arr[i * 3 + 2] = val\n    }\n\n    var texture = new DataTexture(data_arr, dt_size, dt_size, RGBFormat, FloatType)\n    texture.needsUpdate = true\n    return texture\n  },\n})\n\nexport { GlitchPass }\n","import ReactDOM from 'react-dom'\nimport * as THREE from 'three/src/Three'\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\n// A THREE.js React renderer, see: https://github.com/drcmda/react-three-fiber\nimport {\n    apply as applyThree,\n    Canvas,\n    useRender,\n    useThree\n} from 'react-three-fiber'\n// A React animation lib, see: https://github.com/react-spring/react-spring\nimport {\n    apply as applySpring,\n    useSpring,\n    animated as anim,\n    interpolate\n} from 'react-spring/three'\nimport data from './data'\nimport './styles.css'\n\n// Import and register postprocessing classes as three-native-elements for both react-three-fiber & react-spring\n// They'll be available as native elements <effectComposer /> from then on ...\nimport { EffectComposer } from './postprocessing/EffectComposer'\nimport { RenderPass } from './postprocessing/RenderPass'\nimport { GlitchPass } from './postprocessing/GlitchPass'\napplySpring({ EffectComposer, RenderPass, GlitchPass })\napplyThree({ EffectComposer, RenderPass, GlitchPass })\n\n/** This component loads an image and projects it onto a plane */\nfunction Image({ url, opacity, scale, ...props }) {\n    const texture = useMemo(() => new THREE.TextureLoader().load(url), [url])\n    const [hovered, setHover] = useState(false)\n    const hover = useCallback(() => setHover(true), [])\n    const unhover = useCallback(() => setHover(false), [])\n    const { factor } = useSpring({ factor: hovered ? 1.25 : 1 })\n    return (\n        <anim.mesh\n            {...props}\n            onHover={hover}\n            onUnhover={unhover}\n            scale={factor.interpolate(f => [scale * f, scale * f, 1])}>\n            <planeBufferGeometry name=\"geometry\" args={[3.8, 3.8]} />\n            <anim.meshLambertMaterial\n                name=\"material\"\n                transparent\n                opacity={opacity}>\n                <primitive name=\"map\" object={texture} />\n            </anim.meshLambertMaterial>\n        </anim.mesh>\n    )\n}\n\n/** This component renders text via canvas and projects it as a sprite */\nfunction Text({\n    children,\n    position,\n    opacity,\n    color = 'white',\n    fontSize = 410\n}) {\n    const { viewport } = useThree()\n    const { width: viewportWidth, height: viewportHeight } = viewport()\n    const scale =\n        viewportWidth > viewportHeight ? viewportWidth : viewportHeight\n    const canvas = useMemo(() => {\n        const canvas = document.createElement('canvas')\n        canvas.width = canvas.height = 2048\n        const context = canvas.getContext('2d')\n        context.font = `bold ${fontSize}px -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif`\n        context.textAlign = 'center'\n        context.textBaseline = 'middle'\n        context.fillStyle = color\n        context.fillText(children, 1024, 1024 - 410 / 2)\n        return canvas\n    }, [children])\n    return (\n        <anim.sprite scale={[scale, scale, 1]} position={position}>\n            <anim.spriteMaterial name=\"material\" transparent opacity={opacity}>\n                <canvasTexture\n                    name=\"map\"\n                    image={canvas}\n                    premultiplyAlpha\n                    onUpdate={s => (s.needsUpdate = true)}\n                />\n            </anim.spriteMaterial>\n        </anim.sprite>\n    )\n}\n\n/** This component creates a fullscreen colored plane (the background) */\nfunction Background({ color }) {\n    const { viewport } = useThree()\n    const { width, height } = viewport()\n    return (\n        <mesh scale={[width, height, 1]}>\n            <planeGeometry name=\"geometry\" args={[1, 1]} />\n            <anim.meshBasicMaterial\n                name=\"material\"\n                color={color}\n                depthTest={false}\n            />\n        </mesh>\n    )\n}\n\n/** This component creates & rotates a bunch of stars */\nfunction Stars({ position }) {\n    let group = useRef()\n    let theta = 0\n    useRender(() => {\n        const r = 5 * Math.sin(THREE.Math.degToRad((theta += 0.01)))\n        const s = Math.cos(THREE.Math.degToRad(theta * 2))\n        group.current.rotation.set(r, r, r)\n        group.current.scale.set(s, s, s)\n    })\n    const [geo, mat, vertices, coords] = useMemo(() => {\n        const geo = new THREE.SphereBufferGeometry(1, 10, 10)\n        const mat = new THREE.MeshBasicMaterial({\n            color: new THREE.Color('white')\n        })\n        const coords = new Array(1000)\n            .fill()\n            .map(i => [\n                Math.random() * 800 - 400,\n                Math.random() * 800 - 400,\n                Math.random() * 800 - 400\n            ])\n        return [geo, mat, vertices, coords]\n    }, [])\n    return (\n        <anim.group ref={group} position={position}>\n            {coords.map(([p1, p2, p3], i) => (\n                <mesh\n                    key={i}\n                    geometry={geo}\n                    material={mat}\n                    position={[p1, p2, p3]}\n                />\n            ))}\n        </anim.group>\n    )\n}\n\n/** This component creates a glitch effect */\nfunction Effects({ factor }) {\n    const { gl, scene, camera, size } = useThree()\n    const composer = useRef()\n    useEffect(\n        () => void composer.current.obj.setSize(size.width, size.height),\n        [size.width, size.height]\n    )\n    // This takes over as the main render-loop (when 2nd arg is set to true)\n    useRender(() => composer.current.obj.render(), true)\n    return (\n        <effectComposer ref={composer} args={[gl]}>\n            <renderPass name=\"passes\" args={[scene, camera]} />\n            <anim.glitchPass name=\"passes\" renderToScreen factor={factor} />\n        </effectComposer>\n    )\n}\n\n/** This component creates a bunch of parallaxed images */\nfunction Images({ top, mouse, scrollMax }) {\n    return data.map(([url, x, y, factor, z, scale], index) => (\n        <Image\n            key={index}\n            url={url}\n            scale={scale}\n            opacity={top.interpolate([0, 500], [0, 1])}\n            position={interpolate([top, mouse], (top, mouse) => [\n                (-mouse[0] * factor) / 50000 + x,\n                (mouse[1] * factor) / 50000 +\n                    y * 1.15 +\n                    ((top * factor) / scrollMax) * 2,\n                z + top / 2000\n            ])}\n        />\n    ))\n}\n\n/** This component maintains the scene */\nfunction Scene({ top, mouse }) {\n    const { size } = useThree()\n    const scrollMax = size.height * 4.5\n    return (\n        <>\n            <anim.spotLight\n                intensity={1.2}\n                color=\"white\"\n                position={mouse.interpolate((x, y) => [x / 100, -y / 100, 6.5])}\n            />\n            <Effects factor={top.interpolate([0, 150], [1, 0])} />\n            <Background\n                color={top.interpolate(\n                    [0, scrollMax * 0.25, scrollMax * 0.8, scrollMax],\n                    ['#27282F', '#247BA0', '#70C1B3', '#f8f3f1']\n                )}\n            />\n            <Stars position={top.interpolate(top => [0, -1 + top / 20, 0])} />\n            <Images top={top} mouse={mouse} scrollMax={scrollMax} />\n            <Text\n                fontSize={250}\n                opacity={top.interpolate([0, 200], [1, 0])}\n                position={top.interpolate(top => [0, -1 + top / 200, 0])}>\n                taskim\n            </Text>\n            <Text\n                position={top.interpolate(top => [\n                    0,\n                    -20 + ((top * 10) / scrollMax) * 2,\n                    0\n                ])}\n                color=\"black\"\n                fontSize={120}>\n                Développeur web\n            </Text>\n        </>\n    )\n}\n\n/** Main component */\nexport default function Main() {\n    // This tiny spring right here controlls all(!) the animations, one for scroll, the other for mouse movement ...\n    const [{ top, mouse }, set] = useSpring(() => ({ top: 0, mouse: [0, 0] }))\n    const onMouseMove = useCallback(\n        ({ clientX: x, clientY: y }) =>\n            set({\n                mouse: [x - window.innerWidth / 2, y - window.innerHeight / 2]\n            }),\n        []\n    )\n    const onScroll = useCallback(e => set({ top: e.target.scrollTop }), [])\n    return (\n        <>\n            <Canvas className=\"canvas\">\n                <Scene top={top} mouse={mouse} />\n            </Canvas>\n            <div\n                className=\"scroll-container\"\n                onScroll={onScroll}\n                onMouseMove={onMouseMove}>\n                <div style={{ height: '525vh' }} />\n            </div>\n        </>\n    )\n}\n\nReactDOM.render(<Main />, document.getElementById('root'))\n"],"sourceRoot":""}